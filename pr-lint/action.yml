# MegaLinter GitHub Action configuration file
# More info at https://megalinter.io
---
name: MegaLinter
description: Run MegaLinter on the repository
author: Ismo Vuorinen

branding:
  icon: check-circle
  color: green

runs:
  using: composite
  steps:
    #   ╭──────────────────────────────────────────────────────────╮
    #   │                       Git Checkout                       │
    #   ╰──────────────────────────────────────────────────────────╯
    - name: Checkout Code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        token: ${{ github.token }}

        # If you use VALIDATE_ALL_CODEBASE = true, you can remove this line to
        # improve performance
        fetch-depth: 0

    #   ╭──────────────────────────────────────────────────────────╮
    #   │                 Setup Git configuration                  │
    #   ╰──────────────────────────────────────────────────────────╯
    - name: Setup Git Config
      id: git-config
      uses: ivuorinen/actions/set-git-config@312c00f77fbd73948441c8b004607e098e40c97f # 25.4.8

    #   ╭──────────────────────────────────────────────────────────╮
    #   │               Install packages for linting               │
    #   ╰──────────────────────────────────────────────────────────╯

    # Node.js tests if package.json exists
    - name: Detect package.json
      id: detect-node
      shell: bash
      run: |
        if [ -f package.json ]; then
          echo "found=true" >> $GITHUB_OUTPUT
        fi

    - name: Setup Node.js and run tests
      if: steps.detect-node.outputs.found == 'true'
      uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
      with:
        cache: 'npm'

    - name: Install Node.js dependencies
      if: steps.detect-node.outputs.found == 'true'
      shell: bash
      run: npm ci

    # PHP tests if composer.json exists
    - name: Detect composer.json
      id: detect-php
      shell: bash
      run: |
        if [ -f composer.json ]; then
          echo "found=true" >> $GITHUB_OUTPUT
        fi

    - name: Setup PHP
      if: steps.detect-php.outputs.found == 'true'
      uses: shivammathur/setup-php@9e72090525849c5e82e596468b86eb55e9cc5401 # master
      with:
        tools: composer
        coverage: none
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Setup problem matchers for PHP
      if: steps.detect-php.outputs.found == 'true'
      shell: bash
      run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

    - name: Install PHP dependencies
      if: steps.detect-php.outputs.found == 'true'
      shell: bash
      run: composer install --no-progress --prefer-dist --no-interaction

    # Python tests if requirements.txt exists
    - name: Detect requirements.txt
      id: detect-python
      shell: bash
      run: |
        if [ -f requirements.txt ]; then
          echo "found=true" >> $GITHUB_OUTPUT
        fi

    - name: Setup Python
      if: steps.detect-python.outputs.found == 'true'
      uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5.5.0
      with:
        cache: 'pip'

    - name: Install Python dependencies
      if: steps.detect-python.outputs.found == 'true'
      shell: bash
      run: pip install -r requirements.txt

    # Go tests if go.mod exists
    - name: Detect go.mod
      id: detect-go
      shell: bash
      run: |
        if [ -f go.mod ]; then
          echo "found=true" >> $GITHUB_OUTPUT
        fi

    - name: Setup Go
      if: steps.detect-go.outputs.found == 'true'
      uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
      with:
        go-version-file: 'go.mod'
        cache: true

    #   ╭──────────────────────────────────────────────────────────╮
    #   │                        MegaLinter                        │
    #   ╰──────────────────────────────────────────────────────────╯
    - name: MegaLinter
      # You can override MegaLinter flavor used to have faster performances
      # More info at https://megalinter.io/latest/flavors/
      uses: oxsecurity/megalinter/flavors/cupcake@146333030da68e2e58c6ff826633824fabe01eaf # v8.5.0
      id: ml

      # All available variables are described in documentation
      # https://megalinter.io/latest/configuration/
      env:
        # Validates all source when push on main, else just the git diff with
        # main. Override with true if you always want to lint all sources
        #
        # To validate the entire codebase, set to:
        # VALIDATE_ALL_CODEBASE: true
        #
        # To validate only diff with main, set to:
        # VALIDATE_ALL_CODEBASE: >-
        #   ${{
        #     github.event_name == 'push' &&
        #     contains(fromJSON('["refs/heads/main", "refs/heads/master"]'), github.ref)
        #   }}
        VALIDATE_ALL_CODEBASE: >-
          ${{
            github.event_name == 'push' &&
            contains(fromJSON('["refs/heads/main", "refs/heads/master"]'), github.ref)
          }}

        GITHUB_TOKEN: ${{ steps.git-config.outputs.token || github.token }}

        # Apply linter fixes configuration
        #
        # When active, APPLY_FIXES must also be defined as environment variable
        # (in .github/workflows/mega-linter.yml or other CI tool)
        APPLY_FIXES: all

        # Decide which event triggers application of fixes in a commit or a PR
        # (pull_request, push, all)
        APPLY_FIXES_EVENT: pull_request

        # If APPLY_FIXES is used, defines if the fixes are directly committed (commit)
        # or posted in a PR (pull_request)
        APPLY_FIXES_MODE: commit

        # ADD YOUR CUSTOM ENV VARIABLES HERE OR DEFINE THEM IN A FILE
        # .mega-linter.yml AT THE ROOT OF YOUR REPOSITORY

        # Uncomment to disable copy-paste and spell checks
        DISABLE: COPYPASTE,SPELL

    # Upload MegaLinter artifacts
    - name: Archive production artifacts
      if: success() || failure()
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: MegaLinter reports
        include-hidden-files: 'true'
        path: |
          megalinter-reports
          mega-linter.log

    # Set APPLY_FIXES_IF var for use in future steps
    - name: Set APPLY_FIXES_IF var
      shell: bash
      run: |
        printf 'APPLY_FIXES_IF=%s\n' "${{
          steps.ml.outputs.has_updated_sources == 1 &&
          (
            env.APPLY_FIXES_EVENT == 'all' ||
            env.APPLY_FIXES_EVENT == github.event_name
          ) &&
          (
            github.event_name == 'push' ||
            github.event.pull_request.head.repo.full_name == github.repository
          )
        }}" >> "${GITHUB_ENV}"

    # Set APPLY_FIXES_IF_* vars for use in future steps
    - name: Set APPLY_FIXES_IF_* vars
      shell: bash
      run: |
        printf 'APPLY_FIXES_IF_PR=%s\n' "${{
          env.APPLY_FIXES_IF == 'true' &&
          env.APPLY_FIXES_MODE == 'pull_request'
        }}" >> "${GITHUB_ENV}"
        printf 'APPLY_FIXES_IF_COMMIT=%s\n' "${{
          env.APPLY_FIXES_IF == 'true' &&
          env.APPLY_FIXES_MODE == 'commit' &&
          (!contains(fromJSON('["refs/heads/main", "refs/heads/master"]'), github.ref))
        }}" >> "${GITHUB_ENV}"

    # Create pull request if applicable
    # (for now works only on PR from same repository, not from forks)
    - name: Create Pull Request with applied fixes
      uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
      id: cpr
      if: env.APPLY_FIXES_IF_PR == 'true'
      with:
        token: ${{ steps.git-config.outputs.token || github.token }}
        commit-message: '[MegaLinter] Apply linters automatic fixes'
        title: '[MegaLinter] Apply linters automatic fixes'
        labels: bot

    - name: Create PR output
      if: env.APPLY_FIXES_IF_PR == 'true'
      shell: bash
      run: |
        echo "PR Number - ${{ steps.cpr.outputs.pull-request-number }}"
        echo "PR URL - ${{ steps.cpr.outputs.pull-request-url }}"

    # Push new commit if applicable
    # (for now works only on PR from same repository, not from forks)
    - name: Prepare commit
      if: env.APPLY_FIXES_IF_COMMIT == 'true'
      shell: bash
      run: sudo chown -Rc $UID .git/

    - name: Commit and push applied linter fixes
      uses: stefanzweifel/git-auto-commit-action@e348103e9026cc0eee72ae06630dbe30c8bf7a79 # v5.1.0
      if: env.APPLY_FIXES_IF_COMMIT == 'true'
      with:
        branch: >-
          ${{
            github.event.pull_request.head.ref ||
            github.head_ref ||
            github.ref
          }}
        commit_message: '[MegaLinter] Apply linters fixes'
        commit_user_name: ${{ steps.git-config.outputs.username }}
        commit_user_email: ${{ steps.git-config.outputs.email }}
