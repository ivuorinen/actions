---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Laravel Setup and Composer test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_call:
    inputs:
      php-version:
        description: 'PHP Version to use, see https://github.com/marketplace/actions/setup-php-action#php-version-optional'
        required: false
        default: 'latest'
        type: string
      php-version-file:
        description: 'PHP Version file to use, see https://github.com/marketplace/actions/setup-php-action#php-version-file-optional'
        required: false
        default: '.php-version'
        type: string
      extensions:
        description: 'PHP extensions to install, see https://github.com/marketplace/actions/setup-php-action#extensions-optional'
        required: false
        default: 'mbstring, intl, json, pdo_sqlite, sqlite3'
        type: string
      coverage:
        description: 'Specify code-coverage driver, see https://github.com/marketplace/actions/setup-php-action#coverage-optional'
        required: false
        default: 'none'
        type: string

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    outputs:
      check_files: ${{ steps.check_files.outputs.files_exists }}

    permissions:
      contents: write
      statuses: write

    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ github.event.inputs.php-version }}
          php-version-file: ${{ github.event.inputs.php-version-file }}
          extensions: ${{ github.event.inputs.extensions }}
          coverage: ${{ github.event.inputs.coverage }}

      - uses: actions/checkout@v4

      - name: 'Check file existence'
        id: check_files
        uses: andstor/file-existence-action@v3
        with:
          files: 'package.json, artisan'

      - name: Copy .env
        if: steps.check_files.outputs.files_exists == 'true'
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Install Dependencies
        if: steps.check_files.outputs.files_exists == 'true'
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Generate key
        if: steps.check_files.outputs.files_exists == 'true'
        run: php artisan key:generate

      - name: Directory Permissions
        if: steps.check_files.outputs.files_exists == 'true'
        run: chmod -R 777 storage bootstrap/cache

      - name: Create Database
        if: steps.check_files.outputs.files_exists == 'true'
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: Execute composer test (Unit and Feature tests)
        if: steps.check_files.outputs.files_exists == 'true'
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: composer test
