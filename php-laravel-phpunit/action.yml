---
# yaml-language-server: $schema=https://json.schemastore.org/github-action.json
name: Laravel Setup and Composer test
description: 'Setup PHP, install dependencies, generate key, create database and run composer test'
author: 'Ismo Vuorinen'

branding:
  icon: 'terminal'
  color: 'blue'

inputs:
  php-version:
    description: 'PHP Version to use, see https://github.com/marketplace/actions/setup-php-action#php-version-optional'
    required: false
    default: 'latest'
  php-version-file:
    description: 'PHP Version file to use, see https://github.com/marketplace/actions/setup-php-action#php-version-file-optional'
    required: false
    default: '.php-version'
  extensions:
    description: 'PHP extensions to install, see https://github.com/marketplace/actions/setup-php-action#extensions-optional'
    required: false
    default: 'mbstring, intl, json, pdo_sqlite, sqlite3'
  coverage:
    description: 'Specify code-coverage driver, see https://github.com/marketplace/actions/setup-php-action#coverage-optional'
    required: false
    default: 'none'

outputs:
  php-version:
    description: 'The PHP version that was setup'
    value: ${{ steps.setup-php.outputs.php-version }}
  php-version-file:
    description: 'The PHP version file that was used'
    value: ${{ steps.setup-php.outputs.php-version-file }}
  extensions:
    description: 'The PHP extensions that were installed'
    value: ${{ steps.setup-php.outputs.extensions }}
  coverage:
    description: 'The code-coverage driver that was setup'
    value: ${{ steps.setup-php.outputs.coverage }}

runs:
  using: composite
  steps:
    - name: Detect PHP Version
      id: php-version
      uses: ./php-version-detect
      with:
        default-version: ${{ inputs.php-version }}

    - uses: shivammathur/setup-php@0f7f1d08e3e32076e51cae65eb0b0c871405b16e # 2.34.1
      id: setup-php
      with:
        php-version: ${{ steps.php-version.outputs.php-version }}
        extensions: ${{ inputs.extensions }}
        coverage: ${{ inputs.coverage }}

    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: 'Check file existence'
      id: check_files
      uses: andstor/file-existence-action@076e0072799f4942c8bc574a82233e1e4d13e9d6 # v3.0.0
      with:
        files: 'package.json, artisan'

    - name: Copy .env
      if: steps.check_files.outputs.files_exists == 'true'
      shell: bash
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Install Dependencies
      if: steps.check_files.outputs.files_exists == 'true'
      shell: bash
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Generate key
      if: steps.check_files.outputs.files_exists == 'true'
      shell: bash
      run: php artisan key:generate

    - name: Directory Permissions
      if: steps.check_files.outputs.files_exists == 'true'
      shell: bash
      run: chmod -R 777 storage bootstrap/cache

    - name: Create Database
      if: steps.check_files.outputs.files_exists == 'true'
      shell: bash
      run: |
        mkdir -p database
        touch database/database.sqlite

    - name: Execute composer test (Unit and Feature tests)
      if: steps.check_files.outputs.files_exists == 'true'
      shell: bash
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: composer test
