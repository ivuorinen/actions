"""Tests for conventions validator.

Generated by generate-tests.py - Do not edit manually.
"""

from validators.conventions import ConventionBasedValidator


class TestConventionsValidator:
    """Test cases for ConventionsValidator."""

    def setup_method(self):
        """Set up test fixtures."""
        self.validator = ConventionBasedValidator("test-action")

    def teardown_method(self):
        """Clean up after tests."""
        self.validator.clear_errors()

    def test_validate_inputs(self):
        """Test validate_inputs method."""
        # TODO: Add specific test cases for conventions
        inputs = {"test_input": "test_value"}
        result = self.validator.validate_inputs(inputs)
        assert isinstance(result, bool)

    def test_error_handling(self):
        """Test error handling."""
        self.validator.add_error("Test error")
        assert self.validator.has_errors()
        assert len(self.validator.errors) == 1

        self.validator.clear_errors()
        assert not self.validator.has_errors()
        assert len(self.validator.errors) == 0

    def test_github_expressions(self):
        """Test GitHub expression handling."""
        # Most validators should accept GitHub expressions
        result = self.validator.is_github_expression("${{ inputs.value }}")
        assert result is True
