"""Tests for numeric validator.

Generated by generate-tests.py - Do not edit manually.
"""

from validators.numeric import NumericValidator


class TestNumericValidator:
    """Test cases for NumericValidator."""

    def setup_method(self):
        """Set up test fixtures."""
        self.validator = NumericValidator("test-action")

    def teardown_method(self):
        """Clean up after tests."""
        self.validator.clear_errors()

    def test_valid_integers(self):
        """Test valid integer values."""
        assert self.validator.validate_integer("42") is True
        assert self.validator.validate_integer("-10") is True
        assert self.validator.validate_integer("0") is True

    def test_invalid_integers(self):
        """Test invalid integer values."""
        assert self.validator.validate_integer("3.14") is False
        assert self.validator.validate_integer("abc") is False
        assert self.validator.validate_integer("!") is False

    def test_numeric_ranges(self):
        """Test numeric range validation."""
        assert self.validator.validate_range("5", min_val=1, max_val=10) is True
        assert self.validator.validate_range("15", min_val=1, max_val=10) is False
        assert self.validator.validate_range("-5", 0, None) is False

    def test_github_expressions(self):
        """Test GitHub expression handling."""
        assert self.validator.validate_integer("${{ inputs.timeout }}") is True
        assert self.validator.validate_range("${{ env.RETRIES }}", 1, 2) is True
