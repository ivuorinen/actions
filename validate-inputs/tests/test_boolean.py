"""Tests for boolean validator.

Generated by generate-tests.py - Do not edit manually.
"""

from validators.boolean import BooleanValidator


class TestBooleanValidator:
    """Test cases for BooleanValidator."""

    def setup_method(self):
        """Set up test fixtures."""
        self.validator = BooleanValidator("test-action")

    def teardown_method(self):
        """Clean up after tests."""
        self.validator.clear_errors()

    def test_valid_boolean_values(self):
        """Test valid boolean values."""
        valid_values = ["true", "false", "True", "False", "TRUE", "FALSE"]
        for value in valid_values:
            assert self.validator.validate_boolean(value) is True
            assert not self.validator.has_errors()

    def test_validate_boolean_extended(self):
        """Test valid extended boolean values."""
        valid_values = [
            "true",
            "false",
            "True",
            "False",
            "TRUE",
            "FALSE",
            "yes",
            "no",
            "on",
            "off",
            "1",
            "0",
        ]
        for value in valid_values:
            assert self.validator.validate_boolean_extended(value) is True
            assert not self.validator.has_errors()

    def test_invalid_boolean_values(self):
        """Test invalid boolean values."""
        invalid_values = ["maybe", "unknown", "2", "-1", "null"]
        for value in invalid_values:
            self.validator.clear_errors()
            assert self.validator.validate_boolean(value) is False
            assert self.validator.has_errors()

    def test_github_expressions(self):
        """Test GitHub expression handling."""
        assert self.validator.validate_boolean("${{ inputs.dry_run }}") is True
        assert self.validator.validate_boolean("${{ env.DEBUG }}") is True
