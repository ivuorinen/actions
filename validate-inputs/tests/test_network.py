"""Tests for network validator.

Generated by generate-tests.py - Do not edit manually.
"""

from validators.network import NetworkValidator


class TestNetworkValidator:
    """Test cases for NetworkValidator."""

    def setup_method(self):
        """Set up test fixtures."""
        self.validator = NetworkValidator("test-action")

    def teardown_method(self):
        """Clean up after tests."""
        self.validator.clear_errors()

    def test_valid_urls(self):
        """Test valid URL formats."""
        assert self.validator.validate_url("https://example.com") is True
        assert self.validator.validate_url("http://localhost:8080") is True
        assert self.validator.validate_url("https://api.example.com/v1/endpoint") is True

    def test_invalid_urls(self):
        """Test invalid URL formats."""
        assert self.validator.validate_url("not-a-url") is False
        assert self.validator.validate_url("ftp://example.com") is False
        assert self.validator.validate_url("") is False

    def test_valid_emails(self):
        """Test valid email addresses."""
        assert self.validator.validate_email("user@example.com") is True
        assert self.validator.validate_email("test.user+tag@company.co.uk") is True

    def test_invalid_emails(self):
        """Test invalid email addresses."""
        assert self.validator.validate_email("invalid") is False
        assert self.validator.validate_email("@example.com") is False
        assert self.validator.validate_email("user@") is False

    def test_github_expressions(self):
        """Test GitHub expression handling."""
        assert self.validator.validate_url("${{ secrets.WEBHOOK_URL }}") is True
        assert self.validator.validate_email("${{ github.event.pusher.email }}") is True
