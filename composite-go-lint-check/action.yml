---
# yaml-language-server: $schema=https://json.schemastore.org/github-action.json
name: Go Lint Check
description: 'Runs golangci-lint to check for code style violations in Go projects.'
author: 'Ismo Vuorinen'

branding:
  icon: code
  color: blue

inputs:
  go-version:
    description: 'Go version to use.'
    required: false

outputs:
  go-version:
    description: 'Detected go version'
    value: ${{ steps.detect-go-version.outputs.go-version }}

runs:
  using: composite
  steps:
    - name: Detect Go Version
      id: detect-go-version
      uses: ivuorinen/actions/composite-go-version-detect@main

    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '${{ steps.detect-go-version.outputs.go-version }}'

    - name: Install golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest

    - name: Run golangci-lint
      shell: bash
      run: |
        set -euo pipefail

        LINT_FLAGS="${{ inputs.lint-flags }}"
        CONFIG_FLAG=""
        if [ -n "${{ inputs.config-file }}" ]; then
          CONFIG_FLAG="--config ${{ inputs.config-file }}"
        fi

        cd "${{ inputs.working-directory }}"
        golangci-lint run ./... \
          --out-format sarif \
          ${CONFIG_FLAG} \
          ${LINT_FLAGS} > golangci-lint-report.sarif || {
            echo "::error::Linting failed. Check golangci-lint-report.sarif for details"
            exit 1
          }
