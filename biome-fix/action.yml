---
# yaml-language-server: $schema=https://json.schemastore.org/github-action.json
name: Biome Fix
description: Run Biome fix on the repository
author: Ismo Vuorinen

branding:
  icon: check-circle
  color: green

inputs:
  token:
    description: 'GitHub token for authentication'
    required: false
    default: ${{ github.token }}
  username:
    description: 'GitHub username for commits'
    required: false
    default: 'github-actions'
  email:
    description: 'GitHub email for commits'
    required: false
    default: 'github-actions@github.com'

outputs:
  files_changed:
    description: 'Number of files changed by formatting'
    value: ${{ steps.fix.outputs.files_changed }}
  fix_status:
    description: 'Fix status (success/failure)'
    value: ${{ steps.fix.outputs.status }}

runs:
  using: composite
  steps:
    - name: Validate Inputs
      id: validate
      shell: bash
      run: |
        set -euo pipefail

        # Validate GitHub token format (basic validation)
        if [[ -n "${{ inputs.token }}" ]] && [[ "${{ inputs.token }}" != "\${{ github.token }}" ]]; then
          if ! [[ "${{ inputs.token }}" =~ ^(gh[pousr]_[a-zA-Z0-9]{36}|gho_[a-zA-Z0-9]{36})$ ]]; then
            echo "::warning::GitHub token format may be invalid. Expected format: gh*_36characters or gho_36characters"
          fi
        fi

        # Validate email format (basic check)
        if [[ "${{ inputs.email }}" != *"@"* ]] || [[ "${{ inputs.email }}" != *"."* ]]; then
          echo "::error::Invalid email format: '${{ inputs.email }}'. Expected valid email address"
          exit 1
        fi

        # Validate username format (prevent command injection)
        if [[ "${{ inputs.username }}" == *";"* ]] || [[ "${{ inputs.username }}" == *"&&"* ]] || [[ "${{ inputs.username }}" == *"|"* ]]; then
          echo "::error::Invalid username: '${{ inputs.username }}'. Command injection patterns not allowed"
          exit 1
        fi

        # Validate username length
        if [ ${#{{ inputs.username }}} -gt 39 ]; then
          echo "::error::Username too long: ${#{{ inputs.username }}} characters. GitHub usernames are max 39 characters"
          exit 1
        fi

        echo "Input validation completed successfully"

    - name: Checkout Repository
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        token: ${{ inputs.token }}

    - name: Set Git Config
      uses: ivuorinen/actions/set-git-config@main
      with:
        token: ${{ inputs.token }}
        username: ${{ inputs.username }}
        email: ${{ inputs.email }}

    - name: Node Setup
      uses: ivuorinen/actions/node-setup@main

    - name: Cache Node Dependencies
      id: cache
      uses: ivuorinen/actions/common-cache@main
      with:
        type: 'npm'
        paths: 'node_modules'
        key-files: 'package-lock.json,yarn.lock'
        key-prefix: 'biome-fix'

    - name: Install Dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        set -euo pipefail

        npm install -g biome

    - name: Run Biome Fix
      shell: bash
      run: |
        set -euo pipefail

        biome fix .

    - name: Push Fixes
      if: success()
      uses: stefanzweifel/git-auto-commit-action@778341af668090896ca464160c2def5d1d1a3eb0 # v6.0.1
      with:
        commit_message: 'style: autofix Biome violations'
        add_options: '-u'
