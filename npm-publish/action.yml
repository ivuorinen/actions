---
# yaml-language-server: $schema=https://json.schemastore.org/github-action.json
name: Publish to NPM
description: 'Publishes the package to the NPM registry with configurable scope and registry URL.'
author: 'Ismo Vuorinen'

branding:
  icon: package
  color: green

inputs:
  registry-url:
    description: 'Registry URL for publishing.'
    required: false
    default: 'https://registry.npmjs.org/'
  scope:
    description: 'Package scope to use.'
    required: false
    default: '@ivuorinen'
  package-version:
    description: 'The version to publish.'
    required: false
    default: ${{ github.event.release.tag_name }}
  npm_token:
    description: 'NPM token.'
    required: true
    default: ''

outputs:
  registry-url:
    description: 'Registry URL for publishing.'
    value: ${{ inputs.registry-url }}
  scope:
    description: 'Package scope to use.'
    value: ${{ inputs.scope }}
  package-version:
    description: 'The version to publish.'
    value: ${{ inputs.package-version }}
  npm_token:
    description: 'NPM token.'
    value: ${{ inputs.token }}

runs:
  using: composite
  steps:
    - name: Validate Inputs
      id: validate
      shell: bash
      run: |
        set -euo pipefail

        # Validate registry URL format
        if ! [[ "${{ inputs.registry-url }}" =~ ^https?://[a-zA-Z0-9.-]+(/.*)?/?$ ]]; then
          echo "::error::Invalid registry URL format: '${{ inputs.registry-url }}'. Expected http:// or https:// URL (e.g., 'https://registry.npmjs.org/')"
          exit 1
        fi

        # Validate package version format (semver)
        if ! [[ "${{ inputs.package-version }}" =~ ^v?[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9.-]+)?(\+[a-zA-Z0-9.-]+)?$ ]]; then
          echo "::error::Invalid package version format: '${{ inputs.package-version }}'. Expected semantic version (e.g., '1.2.3', 'v1.2.3-alpha', '1.2.3+build')"
          exit 1
        fi

        # Validate scope format (if provided)
        if [[ -n "${{ inputs.scope }}" ]] && ! [[ "${{ inputs.scope }}" =~ ^@[a-z0-9-~][a-z0-9-._~]*$ ]]; then
          echo "::error::Invalid NPM scope format: '${{ inputs.scope }}'. Expected format: @scope-name (e.g., '@myorg', '@my-org')"
          exit 1
        fi

        # Validate NPM token is provided
        if [[ -z "${{ inputs.npm_token }}" ]]; then
          echo "::error::NPM token is required for publishing"
          exit 1
        fi

        # Validate package.json exists
        if [ ! -f "package.json" ]; then
          echo "::error::package.json not found in current directory"
          exit 1
        fi

    - name: Setup Node.js
      uses: ivuorinen/actions/node-setup@main

    - name: Authenticate NPM
      shell: bash
      run: |
        set -euo pipefail

        echo "//${{ inputs.registry-url }}/:_authToken=${{ inputs.npm_token }}" > ~/.npmrc

    - name: Publish Package
      shell: bash
      env:
        NPM_TOKEN: ${{ inputs.npm_token }}
      run: |-
        set -euo pipefail

        pkg_version=$(node -p "require('./package.json').version")
        if [ "$pkg_version" != "${{ inputs.package-version }}" ]; then
          echo "::error::Version mismatch: package.json ($pkg_version) != input (${{ inputs.package-version }})"
          exit 1
        fi

        # Dry run first
        npm publish \
          --registry ${{ inputs.registry-url }} \
          --dry-run \
          --scope ${{ inputs.scope }}

        npm publish \
          --registry ${{ inputs.registry-url }} \
          --verbose \
          --scope ${{ inputs.scope }} \
          --tag ${{ inputs.package-version }}
